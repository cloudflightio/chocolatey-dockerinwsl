<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">
  <Product Id="*"
           UpgradeCode="A7DFAA38-00C1-4187-9F41-D6C11A8955D5"
           Language="1033"
           Manufacturer="Cloudflight GmbH"
           Name="DockerInWSL"
           Version="$(var.Version)">

    <Package InstallerVersion="301" Compressed="yes" Platform="x64" />

    <MajorUpgrade Schedule="afterInstallInitialize" DowngradeErrorMessage="A later version of [ProductName] is already installed. Setup will now exit." />

    <!-- This condition adds an item to the LaunchCondition table of the MSI to block a user -->
    <!-- from setting  this property to something other than blank. -->
    <Condition Message="[ProductName] can not be installed for all users.">
        <![CDATA[NOT ALLUSERS]]>
    </Condition> 

    <!-- This condition adds an item to the LaunchCondition table of the MSI to block a user -->
    <!-- from installing this product unless they have administrative privileges on the system. -->
    <Condition Message="You must have Administrative rights on this machine to install [ProductName].">
        <![CDATA[Privileged]]>
    </Condition>

    <Property Id="POWERSHELLEXE">
    <RegistrySearch Id="POWERSHELLEXE"
        Type="raw"
        Root="HKLM"
        Key="SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell"
        Name="Path" 
        Win64="yes" />
    </Property>
    <Condition Message="This application requires Windows PowerShell.">
        <![CDATA[POWERSHELLEXE]]>
    </Condition>

    <SetProperty Id="CheckPrerequisite"
        Before="CheckPrerequisite"
        Sequence="execute"
        Value="&quot;[POWERSHELLEXE]&quot; -Version 3.0 -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass -Command &quot;&amp; '[#CHECK.PS1]' ; exit $$($Error.Count)&quot;" />

    <CustomAction Id="CheckPrerequisite" BinaryKey="WixCA" DllEntry="WixQuietExec64" Execute="deferred" Return="check" Impersonate="yes" />

    <!-- Install -->
    <SetProperty Id="InstallDockerInWSL"
        Before ="InstallDockerInWSL"
        Sequence="execute"
        Value="&quot;[POWERSHELLEXE]&quot; -Version 3.0 -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass -Command &quot;&amp; '[#INSTALL.PS1]' ; exit $$($Error.Count)&quot;" />

    <CustomAction Id="InstallDockerInWSL" BinaryKey="WixCA" DllEntry="WixQuietExec64" Execute="deferred" Return="check" Impersonate="yes" />

    <!-- Uninstall -->
    <SetProperty Id="UninstallDockerInWSL"
        Before ="UninstallDockerInWSL"
        Sequence="execute"
        Value="&quot;[POWERSHELLEXE]&quot; -Version 3.0 -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass -Command &quot;&amp; '[#UNINSTALL.PS1]' ; exit $$($Error.Count)&quot;" />

    <CustomAction Id="UninstallDockerInWSL" BinaryKey="WixCA" DllEntry="WixQuietExec64" Execute="deferred" Return="check" Impersonate="yes" />

    <!-- Install Sequence -->
    <InstallExecuteSequence>
        <Custom Action="CheckPrerequisite" Before="InstallFinalize"><![CDATA[NOT Installed]]></Custom>
        <Custom Action="InstallDockerInWSL" After="InstallFiles"><![CDATA[NOT Installed]]></Custom>
        <Custom Action='UninstallDockerInWSL' After="InstallInitialize"><![CDATA[Installed AND (NOT UPGRADINGPRODUCTCODE) AND (REMOVE="ALL")]]></Custom>
    </InstallExecuteSequence>

    <MediaTemplate EmbedCab="yes" />

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFiles64Folder">
        <Directory Id="INSTALLFOLDER" Name="DockerInWSL">
          <Directory Id="INSTALLSCRIPTSFOLDER" Name="install" />
          <Directory Id="SCRIPTSFOLDER" Name="scripts" />
        </Directory>
      </Directory>
      <Directory Id="StartupFolder" />
      <Directory Id="ProgramMenuFolder">
        <Directory Id="ApplicationProgramsFolder" Name="DockerInWSL"/>
      </Directory>
    </Directory>

    <Feature Id="CompleteFeature">
      <ComponentGroupRef Id="ProductComponents" />
      <ComponentGroupRef Id="InstallerScriptsComponents" />
      <ComponentGroupRef Id="NetworkComponents" />
      <ComponentGroupRef Id="ImageComponents" />
      <ComponentRef Id="ApplicationShortcutStartupComponent" />
      <ComponentRef Id="ApplicationShortcutComponent" />
    </Feature>
  </Product>

  <Fragment>
    <DirectoryRef Id="ApplicationProgramsFolder">
      <Component Id="ApplicationShortcutComponent" Guid="*">
        <Shortcut Id="ApplicationStartMenuShortcut" 
                  Name="DockerInWsl Start"
                  Description="Start DockerInWSL WSL2 distro and components"
                  Target="[#DOCKERWSL.BAT]"
                  Arguments="start"
                  WorkingDirectory="INSTALLFOLDER"/>
        <Shortcut Id="ApplicationStopMenuShortcut" 
                  Name="DockerInWsl Stop"
                  Description="Stop DockerInWSL WSL2 distro and components"
                  Target="[#DOCKERWSL.BAT]"
                  Arguments="stop"
                  WorkingDirectory="INSTALLFOLDER"/>
        <Shortcut Id="ApplicationRestartMenuShortcut" 
                  Name="DockerInWsl Restart"
                  Description="Restart DockerInWSL WSL2 distro and components"
                  Target="[#DOCKERWSL.BAT]"
                  Arguments="restart"
                  WorkingDirectory="INSTALLFOLDER"/>
        <Shortcut Id="ApplicationLogsMenuShortcut" 
                  Name="DockerInWsl Logs"
                  Description="Show DockerInWSL log folder"
                  Target="[#DOCKERWSL.BAT]"
                  Arguments="show-logs"
                  WorkingDirectory="INSTALLFOLDER"/>
        <Shortcut Id="ApplicationConfigMenuShortcut" 
                  Name="DockerInWsl Config"
                  Description="Show DockerInWSL config folder"
                  Target="[#DOCKERWSL.BAT]"
                  Arguments="show-config"
                  WorkingDirectory="INSTALLFOLDER"/>
        <RemoveFolder Id="CleanUpShortCut" Directory="ApplicationProgramsFolder" On="uninstall"/>
        <RegistryValue Root="HKCU" Key="Software\DockerInWSL" Name="startmenu" Type="integer" Value="1" KeyPath="yes"/>
      </Component>
    </DirectoryRef>
  </Fragment>

  <Fragment>
    <ComponentGroup Id="ProductComponents" Directory="SCRIPTSFOLDER">
      <Component Id="DockerWslBatComponent" Guid="*" Win64="yes">
        <File Id="DOCKERWSL.BAT" Source="scripts\docker-wsl.bat"></File>
      </Component>
      <Component Id="DockerWslPs1Component" Guid="*" Win64="yes">
        <File Id="DOCKERWSLCONTROL.PS1" Source="scripts\docker-wsl-control.ps1"></File>
      </Component>
      <Component Id="DockerBatComponent" Guid="*" Win64="yes">
        <File Id="DOCKER.BAT" Source="scripts\docker.bat"></File>
      </Component>
      <Component Id="DockerComposeBatComponent" Guid="*" Win64="yes">
        <File Id="DOCKERCOMPOSE.BAT" Source="scripts\docker-compose.bat"></File>
      </Component>
      <Component Id="DockerGitBashComponent" Guid="*" Win64="yes">
        <File Id="DOCKER" Source="scripts\docker"></File>
      </Component>
      <Component Id="DockerComposeGitBashComponent" Guid="*" Win64="yes">
        <File Id="DOCKERCOMPOSE" Source="scripts\docker-compose"></File>
      </Component>
      <Component Id="DockerWsleGitBashComponent" Guid="*" Win64="yes">
        <File Id="DOCKERWSL" Source="scripts\docker-wsl"></File>
      </Component>
      <Component Id="EnvironmentComponent" Guid="*" Win64="yes">
        <RegistryValue Root="HKCU" Key="Software\DockerInWSL" Name="DOCKER_HOST" Type="string" Value="tcp://localhost:2375" KeyPath="yes"/>
        <Environment Id="DOCKER_HOST" Name="DOCKER_HOST" Value="tcp://localhost:2375" Permanent="no" Part="all" Action="set" System="no" />
        <Environment Id="PATH" Name="PATH" Value="[SCRIPTSFOLDER]" Permanent="yes" Part="last" Action="set" System="no" />
      </Component>
    </ComponentGroup>
    <ComponentGroup Id="ImageComponents" Directory="INSTALLFOLDER">
      <Component Id="ImageSourceComponent" Guid="*" Win64="yes">
        <File Id="IMAGE.TAR" Source="../image.tar"></File>
      </Component>
      <Component Id="ImageDataSourceComponent" Guid="*" Win64="yes">
        <File Id="IMAGEDATA.TAR" Source="../image-data.tar"></File>
      </Component>
    </ComponentGroup>
    <Component Id="ApplicationShortcutStartupComponent" Guid="*" Win64="yes" Directory="StartupFolder">
      <Shortcut Id="StartupFolderShortcut" Name="dockerinwsl"
                Description="DockerInWSL Startup"
                Target="[#DOCKERWSL.BAT]"
                Arguments="start"
                WorkingDirectory="INSTALLFOLDER" />
      <RemoveFile Id="RemoveStartupFolderShortcut" Name="dockerinwsl" On="uninstall" />
      <RegistryValue Root="HKCU" Key="Software\DockerInWSL" Name="startup" Type="integer" Value="1" KeyPath="yes"/>   
    </Component>
  </Fragment>

  <Fragment>
    <ComponentGroup Id="InstallerScriptsComponents" Directory="INSTALLSCRIPTSFOLDER">
      <Component Id="InstallScriptComponent" Guid="*" Win64="yes">
          <File Id="INSTALL.PS1" Name="install.ps1" Source="install\install.ps1"/>
      </Component>
      <Component Id="UninstallScriptComponent" Guid="*" Win64="yes">
          <File Id="UNINSTALL.PS1" Name="uninstall.ps1" Source="install\uninstall.ps1"/>
      </Component>
      <Component Id="CheckScriptComponent" Guid="*" Win64="yes">
        <File Id="CHECK.PS1" Name="check.ps1" Source="install\check.ps1"/>
      </Component>
      <Component Id="CommonScriptComponent" Guid="*" Win64="yes">  
          <File Id="_COMMON.PS1" Name="_common.ps1" Source="install\_common.ps1"/>
      </Component>
    </ComponentGroup>
  </Fragment>

  <Fragment>
    <ComponentGroup Id="NetworkComponents" Directory="INSTALLFOLDER">
      <Component Id="VpnKitComponent" Guid="*" Win64="yes">
        <File Id="VPNKIT.EXE" Source="tmp\vpnkit.exe"></File>
      </Component>
      <Component Id="NPipeRelayComponent" Guid="*" Win64="yes">
        <File Id="NPIPERELAY.EXE" Source="tmp\npiperelay.exe"></File>
      </Component>
    </ComponentGroup>
  </Fragment>
</Wix>